- name: ensure wireguard interface exists and is configured
  block:
    - name: ensure wireguard is install
      become: yes
      apt:
        name:
          - wireguard
        state: present
        default_release: "{{ avena_apt_backports_release | default(omit) }}"

    - name: ensure wireguard key exists
      become: yes
      shell: umask 377 && wg genkey > {{ avena_wg_interface }}.key
      args:
        chdir: /etc/wireguard/
        creates: "{{ avena_wg_interface }}.key"

    - name: ensure the wireguard interface is configured
      become: yes
      template:
        src: templates/wg.conf.j2
        dest: /etc/wireguard/{{ avena_wg_interface }}.conf
        owner: root
        group: root
        mode: 0600

    - name: gather the wireguard public key
      become: yes
      shell: wg pubkey < /etc/wireguard/{{ avena_wg_interface }}.key
      register: wg_pubkey

    - pause:
        prompt: |
          Please add:

          [Peer]
          # Name = {{ inventory_hostname }}
          PublicKey = {{ wg_pubkey.stdout }}
          AllowedIPs = {{ ansible_host | ipsubnet }}

          to your bounce server wiregaurd configuration and then run

          $ sudo su
          # wg addconf <wg-interface> <(wg-quick strip <wg-interface>)

          before hitting <enter> to continue.

    - name: ensure wireguard auto restarts on failure
      become: yes
      copy:
        dest: /etc/systemd/system/wg-quick@.service.d/
        src: systemd/auto-restart-wg.conf
        owner: root
        group: root
        mode: '0644'
      notify: reload systemd

    - name: ensure the wireguard interface is enabled
      become: yes
      systemd:
        name: wg-quick@{{ avena_wg_interface }}
        enabled: yes
        state: started
