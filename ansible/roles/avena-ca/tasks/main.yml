- name: Client certificate
  block:
  - name: fetch fleet client CA key
    local_action:
      module: command
      cmd: "{{ avena_ca_get_client_pubkey }}"
    register: ca_pubkey

  - set_fact:
      ca_pubkey: "{{ ca_pubkey.stdout }}"

  - name: install fleet client CA key
    become: yes
    copy:
      dest: /etc/ssh/ca-client.pub
      content: "{{ ca_pubkey }}"
      mode: '0644'
      owner: root
      group: root

- name: Host certificate
  block:
  - name: fetch host public key
    become: yes
    slurp:
      src: /etc/ssh/ssh_host_avena_ed25519_key.pub
    register: host_pubkey

  - set_fact:
      host_pubkey: "{{ host_pubkey.content | b64decode }}"

# TODO: Check if the certificate is going to expire soon?
# TODO: `with_items` is like a loop, but here it is allowing for runtime
# interpolation of the `avena_ca_sign_host_key` command template. Can we do it
# without a loop structure?
  - name: generate host certificate
    local_action:
      module: command
      cmd: "{{ avena_ca_sign_host_key }}"
    with_items:
      - pubkey: "{{ host_pubkey }}"
    register: host_cert

  - set_fact:
      host_cert: "{{ host_cert.results[0].stdout }}"

  - name: install host certificate
    become: yes
    copy:
      dest: /etc/ssh/ssh_host_avena_ed25519_key-cert.pub
      content: "{{ host_cert }}"
      mode: '0644'
      owner: root
      group: root
    notify: reload sshd

- name: CA authentication
  block:
  - name: ensure CA authentication principals directory exists
    become: yes
    file:
      path: /etc/ssh/auth_principals
      mode: '0755'
      owner: root
      group: root
      state: directory

  - name: ensure ansible user has CA authentication
    become: yes
    copy:
      dest: /etc/ssh/auth_principals/{{ ansible_user }}
      content: "{{ ansible_user }}"

  - name: ensure sshd is ca configured
    become: yes
    blockinfile:
      block: "{{ lookup('template', 'sshd_config.j2') }}"
      dest: /etc/ssh/sshd_config
      marker: "# {mark} ANSIBLE MANAGED BLOCK -- avena-ca"
      backup: yes
      validate: /usr/sbin/sshd -T -f %s
    notify: reload sshd
